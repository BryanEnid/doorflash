{"version":3,"sources":["components/menu/Menu.js","components/stores/Stores.js","components/App.js","index.js"],"names":["pagStyle","display","margin","Menu","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentWillReceiveProps","nextprops","setState","menu","store","name","numberOfPages","pagination","pages","actualPage","limit","itemsCount","elementsCount","handleSwitchForPagination","switch","state","loading","fetchMoreItems","componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","el","wrap","_context","prev","next","document","getElementById","window","addEventListener","e","elDOM","offsetTop","pageYOffset","innerHeight","stop","_ref2","_callee2","paginationEvent","page","storeName","menuAPI","json","_context2","fetch","concat","HOSTNAME","sent","success","toConsumableArray","body","scrollTop","documentElement","t0","console","log","_x","apply","arguments","render","react_default","createElement","className","Switch","checked","color","onChange","map","item","title","description","price","banner_image","_id","key","src","alt","length","id","es","current","total","centerRipple","style","bind","assertThisInitialized","Component","Stores","storesAPI","status","fetchedStoreData","selectedMenu","fetchMenuFromSelectedStore","_callee3","_args3","_context3","undefined","_this$state","query","skip","fetchedStoreMenu","onSelectedStore","handleNewFetch","currentTarget","dataset","i","_this$state$fetchedSt","push","onClick","data-store-name","App","handleMenu","menuListFromSelectedStore","Stores_Stores","Menu_Menu","ReactDOM","App_App"],"mappings":"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","file":"static/js/main.86aa9118.chunk.js","sourcesContent":["import React, { Component } from \"react\"\nimport './Menu.css';\nimport \"./pagination.css\"\n\n//Material UI\nimport Switch from \"@material-ui/core/Switch\"\nimport Pagination from \"rc-pagination\";\nconst pagStyle = {\n    display: \"inline-block\",\n    margin: \"30px auto\",\n}\n\nexport default class Menu extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            menu: [],\n            store: \"\",\n            switch: false,\n            numberOfPages: 0,\n\n            actualPage: 1,\n            limit: 10,\n            itemsCount: 0\n\n        }\n        this.loading = false\n        this.fetchMoreItems = this.fetchMoreItems.bind(this)\n        this.handleSwitchForPagination = this.handleSwitchForPagination.bind(this)\n    }\n\n    componentWillReceiveProps = (nextprops) => {\n        this.setState({\n            menu: nextprops.menu.menu,\n            store: nextprops.menu.name,\n            numberOfPages: nextprops.menu.pagination.pages,\n            actualPage: 1,\n            limit: nextprops.menu.pagination.limit,\n            itemsCount: nextprops.menu.pagination.elementsCount\n        })\n    }\n\n\n    handleSwitchForPagination = () => {\n        this.setState({\n            switch: !this.state.switch,\n            menu: [],\n            actualPage: 1\n        }, () => {\n            this.loading = true\n            this.state.switch ? this.fetchMoreItems() : this.fetchMoreItems(1)\n        })\n    }\n\n    componentDidMount = async () => {\n        const el = document.getElementById(\"loading\")\n        window.addEventListener(\"scroll\", (e) => {\n            const elDOM = el.offsetTop - 600\n            const windowDOM = window.pageYOffset + window.innerHeight\n            if (windowDOM >= elDOM && !this.loading && this.state.switch) {\n                this.loading = true\n                this.fetchMoreItems()\n            }\n        })\n    }\n\n    fetchMoreItems = async (paginationEvent) => {\n        let page = this.state.actualPage\n        if (paginationEvent) page = paginationEvent\n        try {\n            const storeName = this.state.store\n            const menuAPI = await fetch(`${this.props.HOSTNAME}/partnerships/${storeName}/menu?skip=${(page - 1) * 10}`)\n            const json = await menuAPI.json()\n            const { success } = json\n\n            if (success) {\n                if (paginationEvent) {\n                    this.setState({\n                        menu: [...json.menu],\n                        numberOfPages: json.pagination.pages,\n                        switch: this.state.switch,\n                        actualPage: paginationEvent\n                    }, () => {\n                        document.body.scrollTop = document.documentElement.scrollTop = 0;\n                        this.loading = false\n                    })\n                } else {\n                    this.setState({\n                        menu: [...this.state.menu, ...json.menu],\n                        numberOfPages: json.pagination.pages,\n                        switch: this.state.switch,\n                        actualPage: this.state.actualPage + 1\n                    }, () => {\n                        this.loading = false\n                    })\n                }\n            }\n\n            this.loading = false\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n    render = () => {\n        return (\n            <div>\n                <div className=\"infinite\">\n                    <div>\n                        <p>Infinite Scroll</p>\n                        <Switch checked={this.state.switch} color=\"primary\" onChange={this.handleSwitchForPagination} />\n                    </div>\n                </div>\n\n                <section>\n                    <div className=\"menuSections\">\n\n                        <ul>\n                            <div className=\"arrow\">></div>\n                            <li>Popular Items</li>\n                        </ul>\n                    </div>\n                    <div className=\"menuContainer\">\n                        {\n                            this.state.menu.map(item => {\n                                const { title, description, price, banner_image, _id } = item\n                                if (banner_image) {\n                                    return (\n                                        <div className=\"menuCards\" key={this.state.store + _id} >\n                                            <img src={banner_image} alt={banner_image} />\n                                            <h2 className=\"title\">{title}</h2>\n                                            <p>{description}</p>\n                                            <span className=\"price\">{price}</span>\n                                        </div>\n                                    )\n                                } else {\n                                    return (\n                                        <div className=\"menuCards no_img\" key={this.state.store + _id}>\n                                            <img alt=\"\" src=\"https://proxy.duckduckgo.com/iu/?u=https%3A%2F%2Fimages.puella-magi.net%2Fthumb%2F2%2F27%2FNo_Image_Wide.svg%2F800px-No_Image_Wide.svg.png%3F20110202071158&f=1\" />\n                                            <h2 className=\"title\">{title}</h2>\n                                            <p>{description}</p>\n                                            <span className=\"price\">{price}</span>\n                                        </div>\n                                    )\n                                }\n                            })\n                        }\n\n                        {\n                            this.state.menu.length === 0 ?\n                                <div className=\"menuCards\">\n                                    <h2 className=\"title\">This section or entire website is having big changes by the original source (Doordash.com). These problems will be fixed soon, please come back later</h2>\n                                </div>\n                                : false\n                        }\n                    </div>\n                </section>\n\n                <div id=\"loading\" >\n                    {!this.state.switch && <Pagination\n                        current={this.state.actualPage}\n                        total={this.state.itemsCount}\n                        limit={10}\n                        onChange={this.fetchMoreItems}\n                        centerRipple={true}\n                        style={pagStyle}\n                    />\n                    }\n                </div>\n            </div >\n        )\n    }\n}","import React, { Component } from \"react\"\nimport './Stores.css';\n\nexport default class Stores extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            fetchedStoreData: [],\n            fetchedStoreMenu: [],\n            selectedMenu: \"\",\n            query: \"\",\n            banner_image: \"\"\n        }\n\n        this.fetchMenuFromSelectedStore = this.fetchMenuFromSelectedStore.bind(this)\n        this.handleNewFetch = this.handleNewFetch.bind(this)\n    }\n\n    componentDidMount = async () => {\n        const storesAPI = await fetch(`${this.props.HOSTNAME}/partnerships`)\n        let json = [];\n        if (storesAPI.status === 200) {\n            json = await storesAPI.json()\n\n            this.setState({\n                fetchedStoreData: json,\n                selectedMenu: json[0].name\n            }, () => {\n                this.fetchMenuFromSelectedStore(this.state.selectedMenu, true)\n            })\n        }\n    }\n\n    fetchMenuFromSelectedStore = async (storeName, componentDidMount = false, fetchMore = false) => {\n        if (storeName !== this.state.selectedMenu || componentDidMount) {\n            this.setState({ selectedMenu: storeName }, async () => {\n                let { selectedMenu, query } = this.state\n                const storesAPI = await fetch(`${this.props.HOSTNAME}/partnerships/${selectedMenu}/menu/${query}`)\n                let json = {\n                    _id: \"\",\n                    name: \"\",\n                    menu: [],\n                    pagination: {\n                        \"elementsCount\": 0,\n                        \"pages\": 0,\n                        \"skip\": 0,\n                        \"limit\": 10,\n                        \"actualPage\": 1\n                    }\n                }\n                if (storesAPI.status === 200) {\n                    json = await storesAPI.json()\n                }\n\n                this.setState({\n                    fetchedStoreMenu: json\n                }, () => {\n                    this.props.onSelectedStore(this.state.fetchedStoreMenu)\n                })\n            })\n        }\n    }\n\n    handleNewFetch = (e) => {\n        this.fetchMenuFromSelectedStore(e.currentTarget.dataset.storeName)\n    }\n\n    Menu(props) {\n\n    }\n\n    render() {\n\n        let menu = []\n        for (let i = 0; i < this.state.fetchedStoreData.length; i++) {\n            let { banner_image, title, _id, name } = this.state.fetchedStoreData[i];\n            if (banner_image != null) {\n                menu.push(\n                    <li key={_id} className=\"storesCard\" onClick={this.handleNewFetch} data-store-name={name}>\n                        <img src={banner_image} alt={name + \"_logo\"} className=\"img\" />\n                        {/* <p>{title}</p> */}\n                    </li>)\n            } else {\n                menu.push(<li key={_id} className=\"storesCard\" onClick={this.handleNewFetch} data-store-name={name}>\n                    <p>{title}</p>\n                </li>)\n            }\n        }\n\n\n        return (\n            <div id=\"storesSection\">\n                <ul>\n                    {\n                        menu.map((menu) => menu)\n                    }\n                </ul>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport './App.css';\nimport Menu from \"./menu/Menu\"\nimport Stores from \"./stores/Stores\"\n\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      menu: [],\n    }\n    this.handleMenu = this.handleMenu.bind(this)\n    this.HOSTNAME = \"https://doorflash-api.azurewebsites.net/v1\"\n  }\n\n  handleMenu = (menuListFromSelectedStore) => {\n    this.setState({\n      menu: menuListFromSelectedStore\n    })\n  }\n\n  render = () => (\n    <div>\n      <Stores name=\"Stores\" onSelectedStore={this.handleMenu} HOSTNAME={this.HOSTNAME} />\n      <Menu menu={this.state.menu} HOSTNAME={this.HOSTNAME} />\n    </div>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App name=\"Bryan\" />, document.getElementById('root'));\n"],"sourceRoot":""}