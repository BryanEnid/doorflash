{"version":3,"sources":["components/menu/Menu.js","components/stores/Stores.js","components/App.js","index.js"],"names":["pagStyle","display","margin","Menu","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentWillReceiveProps","nextprops","setState","menu","store","name","numberOfPages","pagination","pages","actualPage","limit","itemsCount","elementsCount","handleSwitchForPagination","switch","state","loading","fetchMoreItems","componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","el","wrap","_context","prev","next","document","getElementById","window","addEventListener","e","elDOM","offsetTop","pageYOffset","innerHeight","stop","_ref2","_callee2","paginationEvent","page","storeName","menuAPI","json","_context2","fetch","concat","sent","success","toConsumableArray","body","scrollTop","documentElement","t0","console","log","_x","apply","arguments","render","react_default","createElement","className","Switch","checked","color","onChange","map","item","title","description","price","banner_image","_id","key","src","alt","length","id","es","current","total","centerRipple","style","bind","assertThisInitialized","Component","Stores","storesAPI","status","fetchedStoreData","selectedMenu","fetchMenuFromSelectedStore","_callee3","_args3","_context3","undefined","_this$state","query","skip","fetchedStoreMenu","onSelectedStore","handleNewFetch","currentTarget","dataset","_this2","_ref4","onClick","data-store-name","App","handleMenu","menuListFromSelectedStore","Stores_Stores","Menu_Menu","ReactDOM","App_App"],"mappings":"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","file":"static/js/main.ee9a7bde.chunk.js","sourcesContent":["import React, { Component } from \"react\"\r\nimport './Menu.css';\r\nimport \"./pagination.css\"\r\n\r\n//Material UI\r\nimport Switch from \"@material-ui/core/Switch\"\r\nimport Pagination from \"rc-pagination\";\r\nconst pagStyle = {\r\n    display: \"inline-block\",\r\n    margin: \"30px auto\",\r\n}\r\n\r\nexport default class Menu extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            menu: [],\r\n            store: \"\",\r\n            switch: false,\r\n            numberOfPages: 0,\r\n\r\n            actualPage: 1,\r\n            limit: 10,\r\n            itemsCount: 0\r\n\r\n        }\r\n        this.loading = false\r\n        this.fetchMoreItems = this.fetchMoreItems.bind(this)\r\n        this.handleSwitchForPagination = this.handleSwitchForPagination.bind(this)\r\n    }\r\n\r\n    componentWillReceiveProps = (nextprops) => {\r\n        this.setState({\r\n            menu: nextprops.menu.menu,\r\n            store: nextprops.menu.name,\r\n            numberOfPages: nextprops.menu.pagination.pages,\r\n            actualPage: 1,\r\n            limit: nextprops.menu.pagination.limit,\r\n            itemsCount: nextprops.menu.pagination.elementsCount\r\n        })\r\n    }\r\n\r\n\r\n    handleSwitchForPagination = () => {\r\n        this.setState({\r\n            switch: !this.state.switch,\r\n            menu: [],\r\n            actualPage: 1\r\n        }, () => {\r\n            this.loading = true\r\n            this.state.switch ? this.fetchMoreItems() : this.fetchMoreItems(1)\r\n        })\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        const el = document.getElementById(\"loading\")\r\n        window.addEventListener(\"scroll\", (e) => {\r\n            const elDOM = el.offsetTop - 600\r\n            const windowDOM = window.pageYOffset + window.innerHeight\r\n            if (windowDOM >= elDOM && !this.loading && this.state.switch) {\r\n                this.loading = true\r\n                this.fetchMoreItems()\r\n            }\r\n        })\r\n    }\r\n\r\n    fetchMoreItems = async (paginationEvent) => {\r\n        let page = this.state.actualPage\r\n        if (paginationEvent) page = paginationEvent\r\n        try {\r\n            const storeName = this.state.store\r\n            const menuAPI = await fetch(`http://192.168.0.23:7070/partnerships/${storeName}/menu?skip=${(page - 1) * 10}`)\r\n            const json = await menuAPI.json()\r\n            const { success } = json\r\n\r\n            if (success) {\r\n                if (paginationEvent) {\r\n                    this.setState({\r\n                        menu: [...json.menu],\r\n                        numberOfPages: json.pagination.pages,\r\n                        switch: this.state.switch,\r\n                        actualPage: paginationEvent\r\n                    }, () => {\r\n                        document.body.scrollTop = document.documentElement.scrollTop = 0;\r\n                        this.loading = false\r\n                    })\r\n                } else {\r\n                    this.setState({\r\n                        menu: [...this.state.menu, ...json.menu],\r\n                        numberOfPages: json.pagination.pages,\r\n                        switch: this.state.switch,\r\n                        actualPage: this.state.actualPage + 1\r\n                    }, () => {\r\n                        this.loading = false\r\n                    })\r\n                }\r\n            }\r\n\r\n            this.loading = false\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <div>\r\n                <div className=\"infinite\">\r\n                    <div>\r\n                        <p>Infinite Scroll</p>\r\n                        <Switch checked={this.state.switch} color=\"primary\" onChange={this.handleSwitchForPagination} />\r\n                    </div>\r\n                </div>\r\n\r\n                <section>\r\n                    <div className=\"menuSections\">\r\n\r\n                        <ul>\r\n                            <div className=\"arrow\">></div>\r\n                            <li>Popular Items</li>\r\n                            <li>Value Menu</li>\r\n                            <li>Drinks</li>\r\n                            <li>Chicken</li>\r\n                            <li>Sanswiches</li>\r\n                            <li>Chicken</li>\r\n                            <li>Sanswiches</li>\r\n\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"menuContainer\">\r\n                        {\r\n                            this.state.menu.map(item => {\r\n                                const { title, description, price, banner_image, _id } = item\r\n                                if (banner_image) {\r\n                                    return (\r\n                                        <div className=\"menuCards\" key={_id}>\r\n                                            <img src={banner_image} alt={banner_image} />\r\n                                            <h2 className=\"title\">{title}</h2>\r\n                                            <p>{description}</p>\r\n                                            <span className=\"price\">{price}</span>\r\n                                        </div>\r\n                                    )\r\n                                } else {\r\n                                    return (\r\n                                        <div className=\"menuCards no_img\" key={_id}>\r\n                                            <img src=\"https://proxy.duckduckgo.com/iu/?u=https%3A%2F%2Fimages.puella-magi.net%2Fthumb%2F2%2F27%2FNo_Image_Wide.svg%2F800px-No_Image_Wide.svg.png%3F20110202071158&f=1\" />\r\n                                            <h2 className=\"title\">{title}</h2>\r\n                                            <p>{description}</p>\r\n                                            <span className=\"price\">{price}</span>\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                            })\r\n                        }\r\n\r\n                        {\r\n                            this.state.menu.length === 0 ?\r\n                                <div className=\"menuCards\">\r\n                                    <h2 className=\"title\">This section or entire website is having big changes by the original source (Doordash.com). These problems will be fixed soon, please come back later</h2>\r\n                                </div>\r\n                                : false\r\n                        }\r\n                    </div>\r\n                </section>\r\n\r\n                <div id=\"loading\" >\r\n                    {!this.state.switch && <Pagination\r\n                        current={this.state.actualPage}\r\n                        total={this.state.itemsCount}\r\n                        limit={10}\r\n                        onChange={this.fetchMoreItems}\r\n                        centerRipple={true}\r\n                        style={pagStyle}\r\n                    />\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\"\r\nimport './Stores.css';\r\n\r\nexport default class Stores extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fetchedStoreData: [],\r\n            fetchedStoreMenu: [],\r\n            selectedMenu: \"\",\r\n            query: \"\",\r\n            banner_image: \"\"\r\n        }\r\n\r\n        this.fetchMenuFromSelectedStore = this.fetchMenuFromSelectedStore.bind(this)\r\n        this.handleNewFetch = this.handleNewFetch.bind(this)\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        const storesAPI = await fetch(\"http://192.168.0.23:7070/partnerships\")\r\n        let json = [];\r\n        if (storesAPI.status === 200) {\r\n            json = await storesAPI.json()\r\n\r\n            this.setState({\r\n                fetchedStoreData: json,\r\n                selectedMenu: json[0].name\r\n            }, () => {\r\n                this.fetchMenuFromSelectedStore(this.state.selectedMenu, true)\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    fetchMenuFromSelectedStore = async (storeName, componentDidMount = false, fetchMore = false) => {\r\n        if (storeName !== this.state.selectedMenu || componentDidMount) {\r\n            this.setState({ selectedMenu: storeName }, async () => {\r\n                let { selectedMenu, query } = this.state\r\n                const storesAPI = await fetch(`http://192.168.0.23:7070/partnerships/${selectedMenu}/menu/${query}`)\r\n                let json = {\r\n                    _id: \"\",\r\n                    name: \"\",\r\n                    menu: [],\r\n                    pagination: {\r\n                        \"elementsCount\": 0,\r\n                        \"pages\": 0,\r\n                        \"skip\": 0,\r\n                        \"limit\": 10,\r\n                        \"actualPage\": 1\r\n                    }\r\n                }\r\n                if (storesAPI.status === 200) {\r\n                    json = await storesAPI.json()\r\n                }\r\n\r\n                this.setState({\r\n                    fetchedStoreMenu: json\r\n                }, () => {\r\n                    this.props.onSelectedStore(this.state.fetchedStoreMenu)\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    handleNewFetch = (e) => {\r\n        this.fetchMenuFromSelectedStore(e.currentTarget.dataset.storeName)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"storesSection\">\r\n                <ul>\r\n                    {this.state.fetchedStoreData.map(({ banner_image, title, _id, name }) => (\r\n                        <li key={_id} className=\"storesCard\" onClick={this.handleNewFetch} data-store-name={name}>\r\n                            <img src={banner_image} alt={name + \"_logo\"} className=\"img\" />\r\n                            <p>{title}</p>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\nimport './App.css';\nimport Menu from \"./menu/Menu\"\nimport Stores from \"./stores/Stores\"\n\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      menu: [],\n    }\n    this.handleMenu = this.handleMenu.bind(this)\n  }\n\n  handleMenu = (menuListFromSelectedStore) => {\n    this.setState({\n      menu: menuListFromSelectedStore\n    })\n  }\n\n  render = () => (\n    <div>\n      <Stores name=\"Stores\" onSelectedStore={this.handleMenu} />\n      <Menu menu={this.state.menu} />\n    </div>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App name=\"Bryan\" />, document.getElementById('root'));\n"],"sourceRoot":""}